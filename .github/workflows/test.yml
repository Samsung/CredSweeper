# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

jobs:

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: ["3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        python -m pip install pytest-random-order
        pip install .[ml]
    - name: UnitTest with pytest
      run: |
        python -m pytest --random-order --random-order-bucket=global --ignore=docs --ignore=tests/test_app.py tests/
    - name: ApplicationTest with pytest
      run: |
        python -m pytest --random-order --random-order-bucket=global --ignore=docs tests/test_app.py

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  requirements:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install --requirement requirements.txt
    - name: UnitTest with pytest
      run: |
        python -m pytest --random-order --random-order-bucket=global --ignore=docs --ignore=tests/test_app.py tests/
    - name: ApplicationTest with pytest
      run: |
        python -m pytest --random-order --random-order-bucket=global --ignore=docs tests/test_app.py

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  flake8:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: pip install --upgrade flake8
    - name: Create directory for flake8 reports
      run: mkdir -vp $GITHUB_WORKSPACE/flake8_report
    - name: Analysing the code with flake8
      run: flake8 credsweeper --output-file=flake8_report/flake8.txt

    - name: FLAKE 8 reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: flake8_report
        path: flake8_report

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  pylint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install required packages
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade .
        pip install --upgrade .[ml]
        python -m pip install --upgrade pylint
    - name: Analysing the code with pylint and minimum Python version 3.7
      run: python -m pylint --py-version=3.7 --errors-only credsweeper
    - name: Analysing the code with pylint and minimum Python version 3.8
      run: python -m pylint --py-version=3.8 --errors-only credsweeper
    - name: Analysing the code with pylint and minimum Python version 3.9
      run: python -m pylint --py-version=3.9 --errors-only credsweeper
